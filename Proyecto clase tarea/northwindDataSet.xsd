<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="northwindDataSet" targetNamespace="http://tempuri.org/northwindDataSet.xsd" xmlns:mstns="http://tempuri.org/northwindDataSet.xsd" xmlns="http://tempuri.org/northwindDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="northwindConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="northwindConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Proyecto_clase_tarea.Properties.Settings.GlobalReference.Default.northwindConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProductosEnviadosTableAdapter" GeneratorDataComponentClassName="ProductosEnviadosTableAdapter" Name="ProductosEnviados" UserDataComponentName="ProductosEnviadosTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="northwindConnectionString (Settings)" DbObjectName="northwind.dbo.ProductosEnviados" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.ProductosEnviados</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProductName" DataSetColumn="ProductName" />
              <Mapping SourceColumn="Quantity" DataSetColumn="Quantity" />
              <Mapping SourceColumn="UnitPrice" DataSetColumn="UnitPrice" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TerritoriesTableAdapter" GeneratorDataComponentClassName="TerritoriesTableAdapter" Name="Territories" UserDataComponentName="TerritoriesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="northwindConnectionString (Settings)" DbObjectName="northwind.dbo.Territories" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Territories] WHERE (([TerritoryID] = @Original_TerritoryID) AND ([TerritoryDescription] = @Original_TerritoryDescription) AND ([RegionID] = @Original_RegionID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TerritoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TerritoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_TerritoryDescription" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TerritoryDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RegionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RegionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Territories] ([TerritoryID], [TerritoryDescription], [RegionID]) VALUES (@TerritoryID, @TerritoryDescription, @RegionID);
SELECT TerritoryID, TerritoryDescription, RegionID FROM Territories WHERE (TerritoryID = @TerritoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TerritoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TerritoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@TerritoryDescription" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TerritoryDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RegionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RegionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TerritoryID, TerritoryDescription, RegionID FROM dbo.Territories</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Territories] SET [TerritoryID] = @TerritoryID, [TerritoryDescription] = @TerritoryDescription, [RegionID] = @RegionID WHERE (([TerritoryID] = @Original_TerritoryID) AND ([TerritoryDescription] = @Original_TerritoryDescription) AND ([RegionID] = @Original_RegionID));
SELECT TerritoryID, TerritoryDescription, RegionID FROM Territories WHERE (TerritoryID = @TerritoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TerritoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TerritoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@TerritoryDescription" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TerritoryDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RegionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RegionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TerritoryID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TerritoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_TerritoryDescription" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TerritoryDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RegionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RegionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TerritoryID" DataSetColumn="TerritoryID" />
              <Mapping SourceColumn="TerritoryDescription" DataSetColumn="TerritoryDescription" />
              <Mapping SourceColumn="RegionID" DataSetColumn="RegionID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="northwindConnectionString (Settings)" DbObjectName="northwind.dbo.insertarterritorios" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="insertarterritorios" MethodsParameterType="CLR" Modifier="Public" Name="insertarterritorios" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="insertarterritorios">
            <SelectCommand>
              <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                <CommandText>dbo.insertarterritorios</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@id" Precision="0" ProviderType="NVarChar" Scale="0" Size="20" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="nchar" DbType="StringFixedLength" Direction="Input" ParameterName="@desc" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@reg" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="northwindDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="northwindDataSet" msprop:Generator_UserDSName="northwindDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ProductosEnviados" msprop:Generator_TableClassName="ProductosEnviadosDataTable" msprop:Generator_TableVarName="tableProductosEnviados" msprop:Generator_RowChangedName="ProductosEnviadosRowChanged" msprop:Generator_TablePropName="ProductosEnviados" msprop:Generator_RowDeletingName="ProductosEnviadosRowDeleting" msprop:Generator_RowChangingName="ProductosEnviadosRowChanging" msprop:Generator_RowEvHandlerName="ProductosEnviadosRowChangeEventHandler" msprop:Generator_RowDeletedName="ProductosEnviadosRowDeleted" msprop:Generator_RowClassName="ProductosEnviadosRow" msprop:Generator_UserTableName="ProductosEnviados" msprop:Generator_RowEvArgName="ProductosEnviadosRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProductName" msprop:Generator_ColumnVarNameInTable="columnProductName" msprop:Generator_ColumnPropNameInRow="ProductName" msprop:Generator_ColumnPropNameInTable="ProductNameColumn" msprop:Generator_UserColumnName="ProductName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Quantity" msprop:Generator_ColumnVarNameInTable="columnQuantity" msprop:Generator_ColumnPropNameInRow="Quantity" msprop:Generator_ColumnPropNameInTable="QuantityColumn" msprop:Generator_UserColumnName="Quantity" type="xs:short" />
              <xs:element name="UnitPrice" msprop:Generator_ColumnVarNameInTable="columnUnitPrice" msprop:Generator_ColumnPropNameInRow="UnitPrice" msprop:Generator_ColumnPropNameInTable="UnitPriceColumn" msprop:Generator_UserColumnName="UnitPrice" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Territories" msprop:Generator_TableClassName="TerritoriesDataTable" msprop:Generator_TableVarName="tableTerritories" msprop:Generator_TablePropName="Territories" msprop:Generator_RowDeletingName="TerritoriesRowDeleting" msprop:Generator_RowChangingName="TerritoriesRowChanging" msprop:Generator_RowEvHandlerName="TerritoriesRowChangeEventHandler" msprop:Generator_RowDeletedName="TerritoriesRowDeleted" msprop:Generator_UserTableName="Territories" msprop:Generator_RowChangedName="TerritoriesRowChanged" msprop:Generator_RowEvArgName="TerritoriesRowChangeEvent" msprop:Generator_RowClassName="TerritoriesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TerritoryID" msprop:Generator_ColumnVarNameInTable="columnTerritoryID" msprop:Generator_ColumnPropNameInRow="TerritoryID" msprop:Generator_ColumnPropNameInTable="TerritoryIDColumn" msprop:Generator_UserColumnName="TerritoryID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TerritoryDescription" msprop:Generator_ColumnVarNameInTable="columnTerritoryDescription" msprop:Generator_ColumnPropNameInRow="TerritoryDescription" msprop:Generator_ColumnPropNameInTable="TerritoryDescriptionColumn" msprop:Generator_UserColumnName="TerritoryDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RegionID" msprop:Generator_ColumnVarNameInTable="columnRegionID" msprop:Generator_ColumnPropNameInRow="RegionID" msprop:Generator_ColumnPropNameInTable="RegionIDColumn" msprop:Generator_UserColumnName="RegionID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Territories" />
      <xs:field xpath="mstns:TerritoryID" />
    </xs:unique>
  </xs:element>
</xs:schema>